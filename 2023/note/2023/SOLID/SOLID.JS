/**
 * S single responsibility principle 单一职责
 * 一个组件只做好一件事
 * O openclosed principle 开放封闭原则
 * 对扩展开放 
 * 对修改封闭
 * L liskov subsitution principle 里氏替换原则
 * 子类能覆盖子类
 * 父类能出现的子类也能出现
 * I interface segregation principle 接口隔离原则
 * 保持接口的单一独立
 * D dependency inversion priciple 依赖倒转原则
 * 面向接口编程 依赖抽象而不依赖具体
 * 使用方只关注接口不关注具体类实现
 * 反转 类中使用其他类 不是直接通过new 而是通过实例工厂获取到对应的类实例化`
 */